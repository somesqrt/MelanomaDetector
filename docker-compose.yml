version: "3"
services:
    # FRONTEND SERVICE
    # frontend:
    #   build: ./MelanomaDetectorFrontend
    #   ports:
    #     - "4200:80"
    #   depends_on:
    #     - backend
    
    # BACKEND SERVICE
    backend:
      build: ./backend
      hostname: backend
      command: 
        - upgrade
        - add_articles
        - add_specialists
        - gunicorn
      environment:
        FLASK_DEBUG: ${FLASK_DEBUG}
        TESTING: ${TESTING}
        CSRF_ENABLED: ${CSRF_ENABLED}
        SWAGGER_USERNAME: ${SWAGGER_USERNAME}
        SWAGGER_PASSWORD: ${SWAGGER_PASSWORD}
        SECRET_KEY: ${SECRET_KEY}
        SQLALCHEMY_DATABASE_URI: ${SQLALCHEMY_DATABASE_URI}
      expose:
        - 8000
      ports:
        - "8000:8000"
      volumes:
        - ./backend:/deploy
      depends_on:
        db:
          condition: service_healthy
    
    # POSTGRES DATABASE SERVICE
    db:
      image: postgres:13-alpine
      container_name: db
      environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
      ports:
        - "5432:5432"
      volumes:
        - melanoma_db_vol:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_PASSWORD}"]
        interval: 5s
        timeout: 5s
        retries: 5
        start_period: 5s

    # NGINX SERVICE
    server:
      image: nginx
      volumes:
        - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
      ports:
        - 80:80
      


volumes:
  melanoma_db_vol:

networks:
  melanoma: